global:
  scrape_interval: 30s
  evaluation_interval: 30s
  scrape_timeout: 10s
  external_labels:
    env: dev

rule_files:
  - /etc/prometheus/rules/*.yml

scrape_configs:
  - job_name: prometheus
    scrape_interval: 60s
    static_configs:
      - targets: [prometheus:9090]
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'prometheus_tsdb_.*|prometheus_engine_.*|prometheus_rule_.*'
        action: drop

  - job_name: books
    scrape_interval: 30s
    metrics_path: /metrics
    static_configs:
      - targets: [books:8001]
    metric_relabel_configs:
      - source_labels: [handler]
        regex: '/health|/metrics|/docs.*|/openapi\.json'
        action: drop
      # Normalize dynamic book IDs
      - source_labels: [handler]
        regex: '/v1/books/\d+'
        target_label: handler
        replacement: '/v1/books/{id}'
      # Group status codes into classes (status already in xx format from FastAPI)
      - source_labels: [status]
        regex: '([2345])xx'
        target_label: status_class
        replacement: '${1}xx'

  - job_name: orders
    scrape_interval: 30s
    metrics_path: /metrics
    static_configs:
      - targets: [orders:8082]
    metric_relabel_configs:
      # Drop health/metrics endpoints (Go promhttp uses 'handler' label)
      - source_labels: [handler]
        regex: '/health|/metrics'
        action: drop
      # Group Go promhttp status codes (uses 'code' label)
      - source_labels: [code]
        regex: '([45])\d\d'
        target_label: status_class
        replacement: '${1}xx'
